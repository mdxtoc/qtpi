(* a naive eavesdropper. Sees Alice's bits but messes with them. Doesn't know 'n' *)
proc Eve (qA, qB, bsA, bsB, report) =
    (new copied) 
    (  CopyBits([],qA,qB,bsA,copied)
     | copied?(bs)     .
       copied?(vs)     .
       report!bs       .
       report!vs       .
      
       copied?(basesA) . bsA!bs       .
       bsB!bs          . bsB?(basesB) . 
        
       (let bvs = zip bs vs)
       (let rvsB = reconcile basesB bvs)
       bsB?(maskB) . bsB?(_)    .       (* receive Bob's mask, ignore his checkbits *)
       (let codeB = mask_filter 0b0 maskB rvsB)
       bsB?(codedvs)            .       (* receive Bob's coded message *)
       report!codedvs           .
       (let message = xor_mask codeB codedvs)
       report!0b1::message      .       (* I _always_ get the message *)
       (* now, can we fake it with Alice to make a code the right length? *)
       (let rvsA = reconcile basesA bvs)
       (let diff = length rvsA - length codeB)
       (let maskA, messageA = 
          if diff>=0 then               (* almost always happens *)
            tabulate diff (const 0b1) @ tabulate (length codeB) (const 0b0), message
          else                          (* rarely, very especially with long messages *)
            tabulate (length rvsA) (const 0b0), randbits (length rvsA)
          fi
       )      
       bsA!maskA                        . 
       bsA!mask_filter 0b1 maskA rvsA   .
       (let codeA = mask_filter 0b0 maskA rvsA)
       bsA!xor_mask codeA message .   (* encode for Alice and send it to her *)
       _0
    )
  
proc CopyBits (bvs, qA, qB, bsA, result) =
        qA?(q)          . (let b = randbit ())
                          q=?[if b=0 then _I else _H fi](v) . 
                          qB!q                              . 
                          CopyBits ((b,v)::bvs, qA, qB, bsA, result)
    <+> bsA?(basesA)    . (let bvs = rev bvs)
                          result!map fst bvs . 
                          result!map snd bvs . 
                          result!basesA      .
                          _0

