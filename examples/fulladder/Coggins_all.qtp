
proc System () =
  ùÑÜ (a,b,c) ‚Üê [(|0>,|0>,|0>); (|0>,|0>,|1>); (|0>,|1>,|0>); (|0>,|1>,|1>); 
               (|1>,|0>,|0>); (|1>,|0>,|1>); (|1>,|1>,|0>); (|1>,|1>,|1>);
               (|+>,|0>,|0>); (|0>,|+>,|0>); (|0>,|0>,|+>); 
               (|+>,|+>,|0>); (|+>,|0>,|+>); (|0>,|+>,|+>);
               (|+>,|+>,|+>)] :
        (newq qA   = a, 
              qB   = b,
              qCin = c) . ‚ÅÅ1 .
        (newq qSum=|0>, qCout=|0>) .
        qA,qSum>>CNot . qB,qSum>>CNot . qCin,qSum>>CNot .
        qA,qB,qCout>>T . qA,qCin,qCout>>T . qB,qCin,qCout>>T .
        ‚ÅÅ2 . 
        
        (* collapse entanglements and dispose, to simplify trace *)
        qA-/-(_) . qB-/-(_) . qCin-/-(_) . 
        qSum-/-(_) . qCout-/-(_) . 
        
  . 
  
            with 1: out!["full adder sum of (A="] . outq!showq qA . out![", B="] . outq!showq qB . out![", Cin="] . outq!showq qCin . out![")"] .
                 2: out![" is (Cout="] . outq!showq qCout . out![", sum="] . outq!showq qSum . out![")\n"] . 
