(* Meyer's Star Trek coin toss, where the coin is a qbit. Only |0> works: try alternative bases to see what happens *)

proc P(s:^qbit, log) = 
  + s?(y) . out!["P passive; "] . y>>I . s!y . log!() . _0        
  + s?(y) . out!["P turns; "]   . y>>X . s!y . log!() . _0
                     
proc Q(q: qbit, s:^qbit, log) = 
  out!["initially "] . outq!(qval q) . out!["; "] .
  q>>H . s!q . s?(q') . q'>>H . 
  out!["finally "] . outq!(qval q') . out!["\n"] .
  log!() . _0 

proc System() = (let k = read_num "number of trials")
                (let bv = read_alternative "basis" "," [("0",|0>); ("1",|1>); ("+",|+>); ("-",|->)])
           out!["See output for results -- can print but can't examine qbit state\n"] .
           Logger (k, bv)

proc Logger (k, bv) = Run (k, bv, 0)

proc Run (k, bv, i) = 
  if i=k then out![show i; " trials\n"] . _0
  else
    (newq q = bv) 
    (new s:^qbit)
    (new reportP, reportQ)
    | P(s,reportP) 
    | Q(q,s,reportQ) 
    | reportP?(_) .
      reportQ?(_) .
      Run (k, bv, i+1)
