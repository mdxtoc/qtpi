(* W-state algorithm taken from 
    the Q# Kata on superposition
    (https://github.com/microsoft/QuantumKatas/blob/master/Superposition/ReferenceImplementation.qs), 
    task 16, WState_PowerOfTwo_Reference
 *)
 
proc W1q (c1) = (newq q=|1>) c1!q . 

proc W2q (c2) =
  (new c1)
  | W1q (c1)
  | . c1?(q0)
    . (newq q1=|0>, anc=|+>)
    . anc,q0,q1>>F . 
    . q0,anc>>CNot . ⁁2
    . c2!q0 . c2!q1 . dispose!anc
    . 
                with 2: . out!["W2q q0 = "] . outq!qval q0 
                        . out!["; q1 = "]   . outq!qval q1 
                        . out!["; anc = "]  . outq!qval anc
                        . out!["\n"]
                        . 
                    
proc W4q (c4) =
 (new c2)
 | W2q (c2)
 | . c2?(q0) 
   . c2?(q1)
   . (newq q2=|0>, q3=|0>, anc=|+>)
   . anc,q0,q2>>F . 
   . anc,q1,q3>>F . 
   . q2,anc>>CNot . 
   . q3,anc>>CNot . ⁁4
   . c4!q0 . c4!q1 . c4!q2 . c4!q3 . dispose!anc
   . 
                with 4: . out!["W4q q0 = "] . outq!qval q0 . 
                        . out!["; q1 = "]   . outq!qval q1 
                        . out!["; q2 = "]   . outq!qval q2 
                        . out!["; q3 = "]   . outq!qval q3 
                        . out!["; anc = "]  . outq!qval anc
                        . out!["\n"]
                        . 

proc System () =
  . (new c)
  | W4q (c)
  | c?(q0) . c?(q1) . c?(q2) . c?(q3) . 
  