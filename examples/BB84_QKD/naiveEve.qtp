(* a naive eavesdropper. Sees Alice's bits but messes with them. *)
proc Eve (qA, qB, bsA, bsB, againA, againB, log) =
    (new done) 
    (  CopyBits([],qA,qB,bsA,done)
     | done?(bs)                        .   (* bs, vs are what I saw *)
       done?(vs)                        .
            log!bs                   .
            log!vs                   .
      
       done?(basesA)   . bsB!basesA     .   (* A->B bases       *)
       bsB?(basesB)    . bsA!basesB     .   (* B->A bases       *)
       bsB?(mask)      . bsA!mask       .   (* B->A mask        *)
       bsB?(cs)        . bsA!cs         .   (* B->A checkbits   *)
            log!cs                   .
       (    bsA?(encrypted)             .   (* A->B message     *)
                              bsB!encrypted                 .   
                                log![bool2bit false]     .   
                                log!encrypted            . 
                                log![0b0]                .   (* can't decode *)
                                log![]                   .   (* empty message *)
                              _0
        <+> againA?(_)                  .    (* round again *)
                              againB!()                     .
                                log![bool2bit true]      .
                              Eve (qA, qB, bsA, bsB, againA, againB, log)
       )
    )

(* Read qbits from qA, measure them in a random bases, send the measured bits on qB,
   return the measurements. Stop when you see a message on bsA, and return that too.
 *)
proc CopyBits (bvs, qA, qB, bsA, result) =
        qA?(q)          . (let b = randbit ())
                          q=?[if b=0 then _I else _H fi](v) . 
                          qB!q                              . 
                          CopyBits ((b,v)::bvs, qA, qB, bsA, result)
    <+> bsA?(basesA)    . (let bvs = rev bvs)
                          result!map fst bvs . 
                          result!map snd bvs . 
                          result!basesA      .
                          _0

