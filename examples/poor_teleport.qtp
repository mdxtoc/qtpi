(* doesn't work, because it doesn't get qbits in the right entangled state *)

proc Alice (x:qbit, c:^bit*bit, z:qbit) = 
    {print_string  "initially Alice's z is "} .
    {print_qbit z} .
    {print_string  "\n"} .
    z,x>>_CNot . z>>_H . z=?(vz) . x=?(vx) . c!vz,vx . _0 

proc Bob(y:qbit, c:^bit*bit) = 
    c?(b1,b2) . y>>_Phi (match b1,b2 .
                         + 0b0,0b0 . 0
                         + 0b0,0b1 . 1
                         + 0b1,0b0 . 2
                         + 0b1,0b1 . 3
						) . 
    {print_string  "finally Bob's y is "} . 
    {print_qbit y} .
    {print_string  "\n"} .
    _0 

(* this entanglement entangles, but doesn't necessarily give h|00>+h|01> *)
proc System () = 
  (newq x=if randbit()=0b0 then |0> else |1> fi, 
        y=if randbit()=0b0 then |0> else |1> fi, 
        z) 
  x>>_H . x,y>>_CNot . 
  (new c:^bit*bit) 
  | Alice(x,c,z) 
  | Bob(y,c)
