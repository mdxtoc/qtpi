
proc Alice (x:qubit, c:^(bit,bit)) = 
    (newq z)
    out!["initially Alice's x is "] .
    outq!(showq x) . 
    out![" and z is "] . 
    outq!(showq z) . out!["\n"] .
    z,x>>CNot . 
    out!["after three-way entanglement z is "] . 
    outq!(showq z) . out!["\n"] .
    z>>H . 
    out!["z is put through a Hadamard gate, and becomes ";] .
    outq!(showq z) . out!["\n"] .
    z-/-(vz) .  
    out!["z is measured in the computational basis, giving ";
                    show vz; ";\n and now x is "] .
    outq!(showq x) . out!["\n"] .
    x-/-(vx) . 
    out!["x is measured in the computational basis, giving ";
                    show vx; "\n"] .
    c!vz,vx . 
     

proc Bob(y:qubit, c:^(bit,bit)) = 
    c?(pair) . 
    out!["Alice sends "; show pair; "\nBob's y is "] .
    outq!(showq y) . out!["\n"] .
    y >> match pair . + (0b0,0b0) . I
                      + (0b0,0b1) . X
                      + (0b1,0b0) . Z
                      + (0b1,0b1) . Z*X     . 
    out!["finally Bob's y is "] . 
    outq!(showq y) . out!["\n"] .
     

proc System () = 
  (newq x=|+>, y=|0>) x,y>>CNot . 
  (new c:^(bit,bit)) | Alice(x,c) | Bob(y,c)
