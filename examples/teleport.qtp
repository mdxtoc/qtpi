
Alice (x:qbit, c:^0..3, z:qbit, report) = 
    report!qbit_state z .
    z,x>>_CNot . z=?[_H](vz) . x=?(vx) . c!vz++vx . _0 

Bob(y:qbit, c:^0..3, report) = 
  c?(n) . y>>_Phi(n) . 
  report!qbit_state y .
  _0

System () = 
  (let k = read_int "number of trials")
  (let verbose = read_bool "with commentary" "y" "n")
  (let standard = read_bool "standard initial state or random" "s" "r")
  {if standard then ()
   else print_string "\nThat, as you will see, is a step too far for the symbolic quantum simulator\n\n"
   fi
  } .
  Report (k, verbose, standard, 0, 0)

Report (k, verbose, standard, i, score) =
  if i=k then {print_strings [string_of_value k; " trials; "; 
                              string_of_value score; " successes\n"
                             ]
              } . _0
  else (new reportA, reportB)
       (  if standard then (newq x=|0>, y=|0>) Control (x, y, reportA, reportB)
                      else (newq x,y)          Control (x, y, reportA, reportB)
          fi
        | reportA?(init)  .
          reportB?(final) .
          {if verbose then print_strings ["initially Alice's z is "; init; 
                                          "; finally Bob's y is "; final;
                                          "\n"
                                         ] 
                      else () 
           fi} .
          Report (k, verbose, standard, i+1, if init=final then score+1 else score fi)
       )
  fi
  
Control (x, y, reportA, reportB) =
  x>>_H . x,y>>_CNot . 
  (new c:^0..3)
  (newq z)
  (  Alice(x,c,z,reportA) 
   | Bob(y,c,reportB)
  )
