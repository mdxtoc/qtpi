proc Alice(qc:^qubit, bbc:^(bit,bit)) =
    (newq qx=|0>,qw=|0>)
    qx >> H . qx,qw >> CNot .
    qc!qx           .
    (let basis = randbit())
    qw -/- [if basis=0b1 then H else I] (value) .
    out![show value; ","; show basis; "\n"] .
    bbc!value,basis . 
    _0
        
proc Bob(qc:^qubit, bbc:^(bit,bit)) =
    qc?(qx)             .
    bbc?(value,basis)   .
    qx -/- [if basis=0b1 then H else I] (measure) .
    out![if measure=value then "honest\n" else "liar!!\n"] .
    _0
    
proc System() = 
    (new qc:^qubit, bbc:^((bit,bit)))
    | Alice(qc,bbc) | Bob(qc,bbc) 
