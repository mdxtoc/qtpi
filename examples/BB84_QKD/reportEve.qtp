
proc ReportEve (verbose, report, done) =
    report?(bs)         .
    report?(vs)         .
    {if verbose then print_strings ["Eve saw "; string_of_value (zip bs vs); "\n"] else () fi} .
    report?(again)      .
    if bit2bool (hd again) then
      {print_string "Eve goes round again\n"} .
      ReportEve (verbose, report, done)
    else
      report?(encrypted)  .
      {if verbose then print_strings ["Eve sees encrypted "; string_of_value encrypted; "\n"] else () fi} .
      report?(decoded)    .
      (let decoded = bit2bool (hd decoded))
      report?(message)    .
      {if verbose && decoded then print_strings ["Eve decodes message "; string_of_value message; "\n"] else () fi} .
      done!decoded, message .
      _0
    fi
