proc System () = 
  (newq q) 
  out!["h="; show sx_h; "; h*h="; show (sx_h*sx_h); "\n"] .
  out!["f="; show sx_f; "; f*f="; show (sx_f*sx_f); "\n"] .
  out!["g="; show sx_g; "; g*g="; show (sx_g*sx_g); "\n"] .
  out!["f*g="; show (sx_f*sx_g); "; g*f="; show (sx_g*sx_f); "\n"] .
  out!["to prove to Raja that qtpi can calculate "; show H; "*"; show H; "="; show (H*H); "\n"] .
  out!["initially "] . outq!(qval q) . out!["; "] .
  q>>H . 
  q>>H . 
  out!["finally "] . outq!(qval q) . out![".\n"] .
  (let den = bits2num (randbits 8)+1)
  (let numr = bits2num (randbits 10)+2)
  (let theta = 𝝅*numr/den)
  (new c)
  | ShowR ("Rx",Rx, theta, c)
  | c?_ .
    | ShowR ("Ry", Ry, theta, c)
    | c?_ .
      | ShowR ("Rz", Rz, theta, c)
      | c?_ . _0

ShowR (Rname, R:angle->gate, theta, c) =
  . out!["theta="; show theta; 
         "; "; Rname; " theta=";  show (R theta); 
         "; "; Rname; " theta†="; show ((R theta)†); 
         "; "; Rname; " theta*";  
               Rname; " theta†="; show (R theta*((R theta)†)); 
         "; "; Rname; " theta*";  
               Rname; " theta=";  show (R theta*R theta);         
         "\n"]
  . c!()
  . _0