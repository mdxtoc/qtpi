fun groverG n = engate ((sx_1+sx_1)*((|+>⊗⊗n)*(<+|⊗⊗n))-(degate I⊗⊗n))

   groverU bs = engate (tabulate_m (2**n) (2**n) tf)
                 where n = length bs
                 where tf i j = if i<>j      then  sx_0 else
                                if i=address then -sx_1 else 
                                                   sx_1
                 where address = bits2num (rev bs) (* big-endian *)  
                 
proc 
  System () =
    . (newq q0 = |+>)  
    . (newq q1 = |+>)
    . (newq q2 = |+>)
    . (newq q3 = |+>)
    . (newq q4 = |+>)
    . (newq q5 = |+>)
    . (newq q6 = |+>)
    . (newq q7 = |+>)
    .
    . (let n = 8)
    . (let G = groverG n)
    . (let bs = randbits n)
    . (let U = groverU bs)
    . (let GU = G*U)
    . (let iters = floor (pi*sqrt(2**n)/4+0.5))
    . ⁁1
    . Grover (iters, GU, q0, q1, q2, q3, q4, q5, q6, q7, bs)
  
                  with 1: out!["grover 8  bs = "; show bs; "; "; show iters; " iterations"; "\n"] . _0

  Grover (iters, GU, q0:qbit, q1:qbit, q2:qbit, q3:qbit, q4:qbit, q5:qbit, q6:qbit, q7:qbit, bs) =
    if iters=0 then
      . q0-/-(b0) . q1-/-(b1) . q2-/-(b2) . q3-/-(b3) . q4-/-(b4) . q5-/-(b5) . q6-/-(b6) . q7-/-(b7) 
      . ⁁1
      . _0
    else
      . q0,q1,q2,q3,q4,q5,q6,q7>>GU
      . Grover (iters-1, GU, q0, q1, q2, q3, q4, q5, q6, q7, bs)
  
                  with
                    1: . (let answer = [b0;b1;b2;b3;b4;b5;b6;b7])
                       . out!["measurement says "; show answer; 
                              if answer=bs then " ok" else " ** WRONG **"; "\n"] 
                       . _0
                     