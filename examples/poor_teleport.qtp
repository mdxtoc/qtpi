(* doesn't work, because it doesn't get qubits in the right entangled state *)

proc Alice (x:qubit, c:^(bit,bit), z:qubit) = 
    out!["initially Alice's z is "] .
    outq!(qval z) .
    out!["\n"] .
    z,x>>CNot . z>>H . z-/-(vz) . x-/-(vx) . c!vz,vx .  

proc Bob(y:qubit, c:^(bit,bit)) = 
    c?(b1,b2) . y>>phi (match (b1,b2) .
                         + (0b0,0b0) . 0
                         + (0b0,0b1) . 1
                         + (0b1,0b0) . 2
                         + (0b1,0b1) . 3
						) . 
    out!["finally Bob's y is "] . 
    outq!(qval y) .
    out!["\n"] .
     

(* this entanglement entangles, but doesn't necessarily give h|00>+h|01> *)
proc System () = 
  (newq x = if randbit()=0b0 then |0> else |1>,   
        y = if randbit()=0b0 then |0> else |1>, 
        z) 
  x>>H . x,y>>CNot . 
  (new c:^(bit,bit)) 
  | Alice(x,c,z) 
  | Bob(y,c)
