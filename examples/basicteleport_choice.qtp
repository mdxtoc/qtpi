proc System () = (newq x=|+>, y=|0>) x,y>>CNot . 
                 (new c:^(bit,bit)) | Alice(x,c) | Bob(y,c)

     Alice (x:qubit, c:^(bit,bit)) = (new cz:^qubit)
                                     | Choose(cz)
                                     | cz?(z).
                                       out!["\ninitially Alice's z is "] . 
                                       outq!(showq z) . out!["\n"] .
                                       z,x>>CNot . z>>H . z-/-(vz) . x-/-(vx) . 
                                       c!vz,vx . 
                                        

     Bob(y:qubit, c:^(bit,bit)) = c?(pair) . 
                                  y >> match pair . + (0b0,0b0) . I
                                                    + (0b0,0b1) . X
                                                    + (0b1,0b0) . Z
                                                    + (0b1,0b1) . Z*X    .
                                  out!["finally Bob's y is "] . 
                                  outq!(showq y) . out!["\n"] .
                                   

     Choose (cz:^qubit) = 
       (let init = read_bool "initialised qubit or random" "i" "r")
       if init 
         then
           (let bv = read_alternative "basis" "," [("0",|0>); ("1",|1>); ("+",|+>); ("-",|->)])
           (newq z = bv) cz!z . 
         else 
           (newq z) cz!z . 

